# Generated by Django 5.2.3 on 2025-06-15 06:12

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_group_visibility_groupinvitation'),
    ]

    operations = [
        migrations.CreateModel(
            name='CharacterSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edition', models.CharField(choices=[('6th', '6版'), ('7th', '7版')], max_length=3)),
                ('name', models.CharField(max_length=100, verbose_name='探索者名')),
                ('player_name', models.CharField(blank=True, max_length=100, verbose_name='プレイヤー名')),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(90)], verbose_name='年齢')),
                ('gender', models.CharField(blank=True, max_length=50, verbose_name='性別')),
                ('occupation', models.CharField(blank=True, max_length=100, verbose_name='職業')),
                ('birthplace', models.CharField(blank=True, max_length=100, verbose_name='出身地')),
                ('residence', models.CharField(blank=True, max_length=100, verbose_name='居住地')),
                ('str_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(90)], verbose_name='筋力(STR)')),
                ('con_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(90)], verbose_name='体力(CON)')),
                ('pow_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(90)], verbose_name='意志力(POW)')),
                ('dex_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(90)], verbose_name='敏捷性(DEX)')),
                ('app_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(90)], verbose_name='外見(APP)')),
                ('siz_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(90)], verbose_name='体格(SIZ)')),
                ('int_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(40), django.core.validators.MaxValueValidator(90)], verbose_name='知識(INT)')),
                ('edu_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(90)], verbose_name='教育(EDU)')),
                ('hit_points_max', models.IntegerField(verbose_name='最大HP')),
                ('hit_points_current', models.IntegerField(verbose_name='現在HP')),
                ('magic_points_max', models.IntegerField(verbose_name='最大MP')),
                ('magic_points_current', models.IntegerField(verbose_name='現在MP')),
                ('sanity_starting', models.IntegerField(verbose_name='初期正気度')),
                ('sanity_max', models.IntegerField(verbose_name='最大正気度')),
                ('sanity_current', models.IntegerField(verbose_name='現在正気度')),
                ('version', models.PositiveIntegerField(default=1, verbose_name='バージョン')),
                ('character_image', models.ImageField(blank=True, upload_to='character_sheets/', verbose_name='キャラクター画像')),
                ('notes', models.TextField(blank=True, verbose_name='メモ')),
                ('is_active', models.BooleanField(default=True, verbose_name='アクティブ')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_sheet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='accounts.charactersheet', verbose_name='元キャラクター')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_sheets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'キャラクターシート',
                'verbose_name_plural': 'キャラクターシート',
                'ordering': ['-updated_at'],
                'unique_together': {('user', 'name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='CharacterEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('weapon', '武器'), ('armor', '防具'), ('item', 'アイテム')], max_length=10)),
                ('name', models.CharField(max_length=100, verbose_name='名前')),
                ('skill_name', models.CharField(blank=True, max_length=100, verbose_name='使用技能')),
                ('damage', models.CharField(blank=True, max_length=20, verbose_name='ダメージ')),
                ('base_range', models.CharField(blank=True, max_length=20, verbose_name='射程')),
                ('attacks_per_round', models.IntegerField(blank=True, null=True, verbose_name='攻撃回数/R')),
                ('ammo', models.IntegerField(blank=True, null=True, verbose_name='装弾数')),
                ('malfunction_number', models.IntegerField(blank=True, null=True, verbose_name='故障ナンバー')),
                ('armor_points', models.IntegerField(blank=True, null=True, verbose_name='防護点')),
                ('description', models.TextField(blank=True, verbose_name='説明')),
                ('quantity', models.IntegerField(default=1, verbose_name='数量')),
                ('character_sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='accounts.charactersheet')),
            ],
            options={
                'verbose_name': 'キャラクター装備',
                'verbose_name_plural': 'キャラクター装備',
                'ordering': ['item_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CharacterSheet6th',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mental_disorder', models.TextField(blank=True, verbose_name='精神的障害')),
                ('idea_roll', models.IntegerField(verbose_name='アイデアロール')),
                ('luck_roll', models.IntegerField(verbose_name='幸運ロール')),
                ('know_roll', models.IntegerField(verbose_name='知識ロール')),
                ('damage_bonus', models.CharField(max_length=10, verbose_name='ダメージボーナス')),
                ('character_sheet', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sixth_edition_data', to='accounts.charactersheet')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterSheet7th',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('luck_points', models.IntegerField(validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(90)], verbose_name='幸運')),
                ('build_value', models.IntegerField(verbose_name='ビルド')),
                ('move_rate', models.IntegerField(verbose_name='移動力')),
                ('dodge_value', models.IntegerField(verbose_name='回避')),
                ('damage_bonus', models.CharField(max_length=10, verbose_name='ダメージボーナス')),
                ('personal_description', models.TextField(blank=True, verbose_name='個人的な記述')),
                ('ideology_beliefs', models.TextField(blank=True, verbose_name='イデオロギー・信念')),
                ('significant_people', models.TextField(blank=True, verbose_name='重要な人々')),
                ('meaningful_locations', models.TextField(blank=True, verbose_name='思い出の品・場所')),
                ('treasured_possessions', models.TextField(blank=True, verbose_name='宝物')),
                ('traits', models.TextField(blank=True, verbose_name='特徴')),
                ('injuries_scars', models.TextField(blank=True, verbose_name='傷・傷跡')),
                ('phobias_manias', models.TextField(blank=True, verbose_name='恐怖症・躁病')),
                ('character_sheet', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seventh_edition_data', to='accounts.charactersheet')),
            ],
        ),
        migrations.CreateModel(
            name='CharacterSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.CharField(max_length=100, verbose_name='技能名')),
                ('base_value', models.IntegerField(default=0, verbose_name='基本値')),
                ('occupation_points', models.IntegerField(default=0, verbose_name='職業技能ポイント')),
                ('interest_points', models.IntegerField(default=0, verbose_name='興味技能ポイント')),
                ('other_points', models.IntegerField(default=0, verbose_name='その他ポイント')),
                ('current_value', models.IntegerField(verbose_name='現在値')),
                ('half_value', models.IntegerField(default=0, verbose_name='1/2値')),
                ('fifth_value', models.IntegerField(default=0, verbose_name='1/5値')),
                ('character_sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='accounts.charactersheet')),
            ],
            options={
                'verbose_name': 'キャラクタースキル',
                'verbose_name_plural': 'キャラクタースキル',
                'ordering': ['skill_name'],
                'unique_together': {('character_sheet', 'skill_name')},
            },
        ),
    ]
